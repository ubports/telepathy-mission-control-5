<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libmcclient-mc-account-manager">
<refmeta>
<refentrytitle role="top_of_page" id="libmcclient-mc-account-manager.top_of_page">McAccountManager</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBMCCLIENT Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>McAccountManager</refname>
<refpurpose>proxy object for the Telepathy AccountManager D-Bus API</refpurpose>
</refnamediv>

<refsynopsisdiv id="libmcclient-mc-account-manager.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="McAccountManager"/>
<synopsis>
                    <link linkend="McAccountManager-struct">McAccountManager</link>;
                    <link linkend="McAccountManagerClass">McAccountManagerClass</link>;
<link linkend="McAccountManager">McAccountManager</link> *  <link linkend="mc-account-manager-new">mc_account_manager_new</link>              (<link linkend="TpDBusDaemon">TpDBusDaemon</link> *dbus);
<link linkend="void">void</link>                (<link linkend="McAccountManagerWhenReadyCb">*McAccountManagerWhenReadyCb</link>)      (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="mc-account-manager-call-when-ready">mc_account_manager_call_when_ready</link>  (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         <link linkend="McAccountManagerWhenReadyCb">McAccountManagerWhenReadyCb</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                (<link linkend="McAccountManagerWhenReadyObjectCb">*McAccountManagerWhenReadyObjectCb</link>)
                                                        (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                <link linkend="mc-account-manager-call-when-iface-ready">mc_account_manager_call_when_iface_ready</link>
                                                        (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         <link linkend="GQuark">GQuark</link> interface,
                                                         <link linkend="McAccountManagerWhenReadyObjectCb">McAccountManagerWhenReadyObjectCb</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                <link linkend="mc-account-manager-call-when-ready-with-accounts">mc_account_manager_call_when_ready_with_accounts</link>
                                                        (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         <link linkend="McAccountManagerWhenReadyObjectCb">McAccountManagerWhenReadyObjectCb</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         ...);
<link linkend="McAccount">McAccount</link> *         <link linkend="mc-account-manager-get-account">mc_account_manager_get_account</link>      (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         const <link linkend="gchar">gchar</link> *account_name);
<link linkend="gboolean">gboolean</link>            (<link linkend="McAccountFilterFunc">*McAccountFilterFunc</link>)              (<link linkend="McAccount">McAccount</link> *account,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="GList">GList</link> *             <link linkend="mc-account-manager-list-accounts">mc_account_manager_list_accounts</link>    (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         <link linkend="McAccountFilterFunc">McAccountFilterFunc</link> filter,
                                                         <link linkend="gpointer">gpointer</link> user_data);


<link linkend="void">void</link>                (<link linkend="mc-cli-account-manager-signal-callback-account-removed">*mc_cli_account_manager_signal_callback_account_removed</link>)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *arg_Account,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * <link linkend="mc-cli-account-manager-connect-to-account-removed">mc_cli_account_manager_connect_to_account_removed</link>
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="mc-cli-account-manager-signal-callback-account-removed">mc_cli_account_manager_signal_callback_account_removed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                (<link linkend="mc-cli-account-manager-signal-callback-account-validity-changed">*mc_cli_account_manager_signal_callback_account_validity_changed</link>)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *arg_Account,
                                                         <link linkend="gboolean">gboolean</link> arg_Valid,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * <link linkend="mc-cli-account-manager-connect-to-account-validity-changed">mc_cli_account_manager_connect_to_account_validity_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="mc-cli-account-manager-signal-callback-account-validity-changed">mc_cli_account_manager_signal_callback_account_validity_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                (<link linkend="mc-cli-account-manager-callback-for-create-account">*mc_cli_account_manager_callback_for_create_account</link>)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *out_Account,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * <link linkend="mc-cli-account-manager-call-create-account">mc_cli_account_manager_call_create_account</link>
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="gchar">gchar</link> *in_Connection_Manager,
                                                         const <link linkend="gchar">gchar</link> *in_Protocol,
                                                         const <link linkend="gchar">gchar</link> *in_Display_Name,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Parameters,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Properties,
                                                         <link linkend="mc-cli-account-manager-callback-for-create-account">mc_cli_account_manager_callback_for_create_account</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                (<link linkend="mc-cli-account-manager-interface-creation-callback-for-create-account">*mc_cli_account_manager_interface_creation_callback_for_create_account</link>)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *out_Account,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * <link linkend="mc-cli-account-manager-interface-creation-call-create-account">mc_cli_account_manager_interface_creation_call_create_account</link>
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="gchar">gchar</link> *in_Connection_Manager,
                                                         const <link linkend="gchar">gchar</link> *in_Protocol,
                                                         const <link linkend="gchar">gchar</link> *in_Display_Name,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Parameters,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Properties,
                                                         <link linkend="mc-cli-account-manager-interface-creation-callback-for-create-account">mc_cli_account_manager_interface_creation_callback_for_create_account</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                (<link linkend="mc-cli-account-manager-interface-query-callback-for-find-accounts">*mc_cli_account_manager_interface_query_callback_for_find_accounts</link>)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_accounts,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * <link linkend="mc-cli-account-manager-interface-query-call-find-accounts">mc_cli_account_manager_interface_query_call_find_accounts</link>
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="GHashTable">GHashTable</link> *in_params,
                                                         <link linkend="mc-cli-account-manager-interface-query-callback-for-find-accounts">mc_cli_account_manager_interface_query_callback_for_find_accounts</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
</synopsis>
</refsynopsisdiv>

<refsect1 id="libmcclient-mc-account-manager.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="TpProxy">TpProxy</link>
         +----McAccountManager
</synopsis>
</refsect1>






<refsect1 id="libmcclient-mc-account-manager.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="McAccountManager-account-created">account-created</link>&quot;                                : Run Last
  &quot;<link linkend="McAccountManager-account-ready">account-ready</link>&quot;                                  : Run Last
</synopsis>
</refsect1>


<refsect1 id="libmcclient-mc-account-manager.description" role="desc">
<title role="desc.title">Description</title>
<para>
This module provides a client-side proxy object for the Telepathy
AccountManager D-Bus API.</para>
<para>
</para>
</refsect1>

<refsect1 id="libmcclient-mc-account-manager.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="McAccountManager-struct" role="struct">
<title>McAccountManager</title>
<indexterm zone="McAccountManager-struct"><primary sortas="McAccountManager">McAccountManager</primary></indexterm><programlisting>typedef struct _McAccountManager McAccountManager;</programlisting>
<para>
A proxy object for the Telepathy AccountManager D-Bus API. This is a
subclass of <link linkend="TpProxy"><type>TpProxy</type></link>.</para>
<para>
</para></refsect2>
<refsect2 id="McAccountManagerClass" role="struct">
<title>McAccountManagerClass</title>
<indexterm zone="McAccountManagerClass"><primary sortas="McAccountManagerClass">McAccountManagerClass</primary></indexterm><programlisting>typedef struct _McAccountManagerClass McAccountManagerClass;</programlisting>
<para>
The class of a <link linkend="McAccountManager"><type>McAccountManager</type></link>.</para>
<para>
</para></refsect2>
<refsect2 id="mc-account-manager-new" role="function">
<title>mc_account_manager_new ()</title>
<indexterm zone="mc-account-manager-new"><primary sortas="mc_account_manager_new">mc_account_manager_new</primary></indexterm><programlisting><link linkend="McAccountManager">McAccountManager</link> *  mc_account_manager_new              (<link linkend="TpDBusDaemon">TpDBusDaemon</link> *dbus);</programlisting>
<para>
Creates a proxy for the DBus AccountManager Telepathy object.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>dbus</parameter>&#160;:</term>
<listitem><simpara> a D-Bus daemon; may not be <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a new <link linkend="McAccountManager"><type>McAccountManager</type></link> object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="McAccountManagerWhenReadyCb" role="function">
<title>McAccountManagerWhenReadyCb ()</title>
<indexterm zone="McAccountManagerWhenReadyCb"><primary sortas="McAccountManagerWhenReadyCb">McAccountManagerWhenReadyCb</primary></indexterm><programlisting><link linkend="void">void</link>                (*McAccountManagerWhenReadyCb)      (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>manager</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="McAccountManager"><type>McAccountManager</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> if the interface is ready for use, or the error with which it
was invalidated if it is now invalid.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> the user data that was passed to
<link linkend="mc-account-manager-call-when-ready"><function>mc_account_manager_call_when_ready()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-account-manager-call-when-ready" role="function">
<title>mc_account_manager_call_when_ready ()</title>
<indexterm zone="mc-account-manager-call-when-ready"><primary sortas="mc_account_manager_call_when_ready">mc_account_manager_call_when_ready</primary></indexterm><programlisting><link linkend="void">void</link>                mc_account_manager_call_when_ready  (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         <link linkend="McAccountManagerWhenReadyCb">McAccountManagerWhenReadyCb</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Start retrieving and monitoring the properties of the base interface of
<parameter>manager</parameter>. If they have already been retrieved, call <parameter>callback</parameter> immediately,
then return. Otherwise, <parameter>callback</parameter> will be called when the properties are
ready.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>manager</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="McAccountManager"><type>McAccountManager</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the interface becomes ready or invalidated, whichever
happens first.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user data to be passed to <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="McAccountManagerWhenReadyObjectCb" role="function">
<title>McAccountManagerWhenReadyObjectCb ()</title>
<indexterm zone="McAccountManagerWhenReadyObjectCb"><primary sortas="McAccountManagerWhenReadyObjectCb">McAccountManagerWhenReadyObjectCb</primary></indexterm><programlisting><link linkend="void">void</link>                (*McAccountManagerWhenReadyObjectCb)
                                                        (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>manager</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="McAccountManager"><type>McAccountManager</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> if the interface is ready for use, or the error with which it
was invalidated if it is now invalid.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> the user data that was passed to
<link linkend="mc-account-call-when-iface-ready"><function>mc_account_call_when_iface_ready()</function></link> or <link linkend="mc-account-call-when-all-ready"><function>mc_account_call_when_all_ready()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="GObject"><type>GObject</type></link> that was passed to
<link linkend="mc-account-call-when-iface-ready"><function>mc_account_call_when_iface_ready()</function></link> or <link linkend="mc-account-call-when-all-ready"><function>mc_account_call_when_all_ready()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-account-manager-call-when-iface-ready" role="function">
<title>mc_account_manager_call_when_iface_ready ()</title>
<indexterm zone="mc-account-manager-call-when-iface-ready"><primary sortas="mc_account_manager_call_when_iface_ready">mc_account_manager_call_when_iface_ready</primary></indexterm><programlisting><link linkend="void">void</link>                mc_account_manager_call_when_iface_ready
                                                        (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         <link linkend="GQuark">GQuark</link> interface,
                                                         <link linkend="McAccountManagerWhenReadyObjectCb">McAccountManagerWhenReadyObjectCb</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start retrieving and monitoring the properties of the interface <parameter>interface</parameter>
of <parameter>account</parameter>. If they have already been retrieved, call <parameter>callback</parameter>
immediately, then return. Otherwise, <parameter>callback</parameter> will be called when the
properties are ready.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>manager</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="McAccountManager"><type>McAccountManager</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>interface</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GQuark"><type>GQuark</type></link> representing the interface to process.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the interface becomes ready or invalidated, whichever
happens first.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user data to be passed to <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the call has
succeeded, failed or been cancelled.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be weakly referenced; if
it is destroyed, this call will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if
<parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-account-manager-call-when-ready-with-accounts" role="function">
<title>mc_account_manager_call_when_ready_with_accounts ()</title>
<indexterm zone="mc-account-manager-call-when-ready-with-accounts"><primary sortas="mc_account_manager_call_when_ready_with_accounts">mc_account_manager_call_when_ready_with_accounts</primary></indexterm><programlisting><link linkend="void">void</link>                mc_account_manager_call_when_ready_with_accounts
                                                        (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         <link linkend="McAccountManagerWhenReadyObjectCb">McAccountManagerWhenReadyObjectCb</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         ...);</programlisting>
<para>
This is a convenience function that waits for the account manager to be
ready, after which it requests the desired interfaces out of all accounts
and returns only once they are all ready.
After this function has been called, all new accounts that should appear
will have their desired interfaces retrieved, and the "account-ready" signal
will be emitted.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>manager</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="McAccountManager"><type>McAccountManager</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the account manager and all the accounts are ready,
or some error occurs.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user data to be passed to <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the call has
succeeded, failed or been cancelled.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be weakly referenced; if
it is destroyed, this call will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if
<parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara> a list of <link linkend="GQuark"><type>GQuark</type></link> types representing the account interfaces to
process, followed by <link linkend="0--CAPS"><literal>0</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-account-manager-get-account" role="function">
<title>mc_account_manager_get_account ()</title>
<indexterm zone="mc-account-manager-get-account"><primary sortas="mc_account_manager_get_account">mc_account_manager_get_account</primary></indexterm><programlisting><link linkend="McAccount">McAccount</link> *         mc_account_manager_get_account      (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         const <link linkend="gchar">gchar</link> *account_name);</programlisting>
<para>
Get the <link linkend="McAccount"><type>McAccount</type></link> for the account whose name is <parameter>account_name</parameter>. It looks up
the accounts from an internal cache, and if the <link linkend="McAccount"><type>McAccount</type></link> is not found
there it is created, provided that the <parameter>account_name</parameter> refers to a proper
account.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>manager</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="McAccountManager"><type>McAccountManager</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>account_name</parameter>&#160;:</term>
<listitem><simpara> the name of a <link linkend="McAccount"><type>McAccount</type></link>, or an object path.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="McAccount"><type>McAccount</type></link>, not referenced. <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>account_name</parameter> does not match
any account.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="McAccountFilterFunc" role="function">
<title>McAccountFilterFunc ()</title>
<indexterm zone="McAccountFilterFunc"><primary sortas="McAccountFilterFunc">McAccountFilterFunc</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            (*McAccountFilterFunc)              (<link linkend="McAccount">McAccount</link> *account,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>account</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="McAccount"><type>McAccount</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> the user data that was passed to
<link linkend="mc-account-manager-list-accounts"><function>mc_account_manager_list_accounts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if <parameter>account</parameter> must be listed, <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-account-manager-list-accounts" role="function">
<title>mc_account_manager_list_accounts ()</title>
<indexterm zone="mc-account-manager-list-accounts"><primary sortas="mc_account_manager_list_accounts">mc_account_manager_list_accounts</primary></indexterm><programlisting><link linkend="GList">GList</link> *             mc_account_manager_list_accounts    (<link linkend="McAccountManager">McAccountManager</link> *manager,
                                                         <link linkend="McAccountFilterFunc">McAccountFilterFunc</link> filter,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
List all accounts known by the <parameter>manager</parameter>. For this function to be really
useful, you first need to have waited for
<link linkend="mc-account-manager-call-when-ready-with-accounts"><function>mc_account_manager_call_when_ready_with_accounts()</function></link> to succeed, or it will
only return those accounts for which <link linkend="mc-account-manager-get-account"><function>mc_account_manager_get_account()</function></link> has
been called.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>manager</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="McAccountManager"><type>McAccountManager</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filter</parameter>&#160;:</term>
<listitem><simpara> a function for filtering accounts, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user data to be supplied to the filtering callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="GList"><type>GList</type></link> of <link linkend="McAccount"><type>McAccount</type></link> objects; to be free'd with <link linkend="g-list-free"><function>g_list_free()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-cli-account-manager-signal-callback-account-removed" role="function">
<title>mc_cli_account_manager_signal_callback_account_removed ()</title>
<indexterm zone="mc-cli-account-manager-signal-callback-account-removed"><primary sortas="mc_cli_account_manager_signal_callback_account_removed">mc_cli_account_manager_signal_callback_account_removed</primary></indexterm><programlisting><link linkend="void">void</link>                (*mc_cli_account_manager_signal_callback_account_removed)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *arg_Account,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Represents the signature of a callback for the signal AccountRemoved.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> The proxy on which <link linkend="mc-cli-account-manager-connect-to-account-removed"><function>mc_cli_account_manager_connect_to_account_removed()</function></link>
 was called
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Account</parameter>&#160;:</term>
<listitem><simpara> An Account, which must not be used any more.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> User-supplied weakly referenced object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-cli-account-manager-connect-to-account-removed" role="function">
<title>mc_cli_account_manager_connect_to_account_removed ()</title>
<indexterm zone="mc-cli-account-manager-connect-to-account-removed"><primary sortas="mc_cli_account_manager_connect_to_account_removed">mc_cli_account_manager_connect_to_account_removed</primary></indexterm><programlisting><link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * mc_cli_account_manager_connect_to_account_removed
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="mc-cli-account-manager-signal-callback-account-removed">mc_cli_account_manager_signal_callback_account_removed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Connect a handler to the signal AccountRemoved.
</para>
<para>
The given account has been removed.          &lt;tp:rationale&gt;           This is effectively change notification for the valid and invalid           accounts lists. On emission of this signal, the Account indicated           will no longer be present in either of the lists.         &lt;/tp:rationale&gt;</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpProxy"><type>TpProxy</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> Callback to be called when the signal is
  received
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data for the callback
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> Destructor for the user-supplied data, which
  will be called when this signal is disconnected, or
  before this function returns <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GObject"><type>GObject</type></link> which will be weakly referenced; 
  if it is destroyed, this callback will automatically be
  disconnected
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to raise an error if <link linkend="NULL--CAPS"><literal>NULL</literal></link> is
  returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxySignalConnection"><type>TpProxySignalConnection</type></link> containing all of the
above, which can be used to disconnect the signal; or
<link linkend="NULL--CAPS"><literal>NULL</literal></link> if the proxy does not have the desired interface
or has become invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-cli-account-manager-signal-callback-account-validity-changed" role="function">
<title>mc_cli_account_manager_signal_callback_account_validity_changed ()</title>
<indexterm zone="mc-cli-account-manager-signal-callback-account-validity-changed"><primary sortas="mc_cli_account_manager_signal_callback_account_validity_changed">mc_cli_account_manager_signal_callback_account_validity_changed</primary></indexterm><programlisting><link linkend="void">void</link>                (*mc_cli_account_manager_signal_callback_account_validity_changed)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *arg_Account,
                                                         <link linkend="gboolean">gboolean</link> arg_Valid,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Represents the signature of a callback for the signal AccountValidityChanged.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> The proxy on which <link linkend="mc-cli-account-manager-connect-to-account-validity-changed"><function>mc_cli_account_manager_connect_to_account_validity_changed()</function></link>
 was called
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Account</parameter>&#160;:</term>
<listitem><simpara> An Account.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Valid</parameter>&#160;:</term>
<listitem><simpara> True if the account is now valid.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> User-supplied weakly referenced object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-cli-account-manager-connect-to-account-validity-changed" role="function">
<title>mc_cli_account_manager_connect_to_account_validity_changed ()</title>
<indexterm zone="mc-cli-account-manager-connect-to-account-validity-changed"><primary sortas="mc_cli_account_manager_connect_to_account_validity_changed">mc_cli_account_manager_connect_to_account_validity_changed</primary></indexterm><programlisting><link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * mc_cli_account_manager_connect_to_account_validity_changed
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="mc-cli-account-manager-signal-callback-account-validity-changed">mc_cli_account_manager_signal_callback_account_validity_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Connect a handler to the signal AccountValidityChanged.
</para>
<para>
The validity of the given account has changed. New accounts are         also indicated by this signal, as an account validity change         (usually to True) on an account that did not previously exist.          &lt;tp:rationale&gt;           This is effectively change notification for the valid and invalid           accounts lists.         &lt;/tp:rationale&gt;</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpProxy"><type>TpProxy</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> Callback to be called when the signal is
  received
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data for the callback
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> Destructor for the user-supplied data, which
  will be called when this signal is disconnected, or
  before this function returns <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GObject"><type>GObject</type></link> which will be weakly referenced; 
  if it is destroyed, this callback will automatically be
  disconnected
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to raise an error if <link linkend="NULL--CAPS"><literal>NULL</literal></link> is
  returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxySignalConnection"><type>TpProxySignalConnection</type></link> containing all of the
above, which can be used to disconnect the signal; or
<link linkend="NULL--CAPS"><literal>NULL</literal></link> if the proxy does not have the desired interface
or has become invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-cli-account-manager-callback-for-create-account" role="function">
<title>mc_cli_account_manager_callback_for_create_account ()</title>
<indexterm zone="mc-cli-account-manager-callback-for-create-account"><primary sortas="mc_cli_account_manager_callback_for_create_account">mc_cli_account_manager_callback_for_create_account</primary></indexterm><programlisting><link linkend="void">void</link>                (*mc_cli_account_manager_callback_for_create_account)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *out_Account,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a CreateAccount method call
succeeds or fails.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Account</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <parameter>error</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>: The new &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy&quot;&gt;Account&lt;/tp:dbus-ref&gt;.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-cli-account-manager-call-create-account" role="function">
<title>mc_cli_account_manager_call_create_account ()</title>
<indexterm zone="mc-cli-account-manager-call-create-account"><primary sortas="mc_cli_account_manager_call_create_account">mc_cli_account_manager_call_create_account</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * mc_cli_account_manager_call_create_account
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="gchar">gchar</link> *in_Connection_Manager,
                                                         const <link linkend="gchar">gchar</link> *in_Protocol,
                                                         const <link linkend="gchar">gchar</link> *in_Display_Name,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Parameters,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Properties,
                                                         <link linkend="mc-cli-account-manager-callback-for-create-account">mc_cli_account_manager_callback_for_create_account</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a CreateAccount method call.
</para>
<para>
Request the creation of a new &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy&quot;&gt;Account&lt;/tp:dbus-ref&gt;. The         account manager SHOULD NOT allow invalid accounts to be created.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Connection_Manager</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The name of the connection manager, e.g. &amp;quot;salut&amp;quot;.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Protocol</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The protocol, e.g. &amp;quot;local-xmpp&amp;quot;.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Display_Name</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The initial value of the new account&apos;s &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy.Account&quot;&gt;DisplayName&lt;/tp:dbus-ref&gt;           property. The account manager SHOULD modify this to make it unique if           an Account already exists with the same display name, for instance by           appending a number or the &apos;account&apos; parameter. Account manager           implementations SHOULD accept an empty string, but account editing           user interfaces should avoid passing an empty string for this           parameter.            &lt;tp:rationale&gt;             &lt;p&gt;The account creation UI may ask the user for a name for the new               account. If the author of the UI chooses not to do this, the               account creation UI is better able to suggest a default display               name because it has protocol-specific knowledge which the account               manager does not.&lt;/p&gt;              &lt;p&gt;The account manager always knows the complete list of accounts so               it can easily tell whether it should append something to the               display name to avoid presenting two identically-named accounts to               the user.&lt;/p&gt;           &lt;/tp:rationale&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Parameters</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: Initial parameter values, as would be passed to           &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy.ConnectionManager&quot;&gt;RequestConnection&lt;/tp:dbus-ref&gt;.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Properties</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;The values of any other properties to be set immediately on the             new Account.&lt;/p&gt;            &lt;p&gt;Only the properties mentioned in             &lt;tp:member-ref&gt;SupportedAccountProperties&lt;/tp:member-ref&gt; are             acceptable here. In particular, the &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy.Account&quot;&gt;DisplayName&lt;/tp:dbus-ref&gt;             and &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy.Account&quot;&gt;Parameters&lt;/tp:dbus-ref&gt;             properties are never allowed here, since they are set using the other             arguments to this method.&lt;/p&gt;            &lt;p&gt;Account manager implementations SHOULD support creating accounts             with an empty value for this argument.&lt;/p&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL--CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-cli-account-manager-interface-creation-callback-for-create-account" role="function">
<title>mc_cli_account_manager_interface_creation_callback_for_create_account ()</title>
<indexterm zone="mc-cli-account-manager-interface-creation-callback-for-create-account"><primary sortas="mc_cli_account_manager_interface_creation_callback_for_create_account">mc_cli_account_manager_interface_creation_callback_for_create_account</primary></indexterm><programlisting><link linkend="void">void</link>                (*mc_cli_account_manager_interface_creation_callback_for_create_account)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *out_Account,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a CreateAccount method call
succeeds or fails.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Account</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <parameter>error</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>: The new account.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-cli-account-manager-interface-creation-call-create-account" role="function">
<title>mc_cli_account_manager_interface_creation_call_create_account ()</title>
<indexterm zone="mc-cli-account-manager-interface-creation-call-create-account"><primary sortas="mc_cli_account_manager_interface_creation_call_create_account">mc_cli_account_manager_interface_creation_call_create_account</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * mc_cli_account_manager_interface_creation_call_create_account
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="gchar">gchar</link> *in_Connection_Manager,
                                                         const <link linkend="gchar">gchar</link> *in_Protocol,
                                                         const <link linkend="gchar">gchar</link> *in_Display_Name,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Parameters,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Properties,
                                                         <link linkend="mc-cli-account-manager-interface-creation-callback-for-create-account">mc_cli_account_manager_interface_creation_callback_for_create_account</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a CreateAccount method call.
</para>
<para>
&lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;         &lt;p&gt;Request the creation of a new account, and sets the given properties on it.&lt;/p&gt;          &lt;tp:rationale&gt;           &lt;p&gt;Besides for optimization reasons, it makes sense for some           properties to be set as soon as the account is created (one being the           &amp;quot;Profile&amp;quot; property in the Compat interface).&lt;/p&gt;         &lt;/tp:rationale&gt;</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Connection_Manager</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The name of the connection manager, e.g. &amp;quot;salut&amp;quot;.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Protocol</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The protocol, e.g. &amp;quot;local-xmpp&amp;quot;.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Display_Name</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The initial value of the new account&apos;s DisplayName           property. The account manager MAY modify this to make it unique,           for instance by appending a number or the &apos;account&apos;           parameter.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Parameters</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: Initial parameter values, as would be passed to           RequestConnection.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Properties</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;The properties to be set, whose key must be in the form           &lt;code&gt;Interface.PropertyName&lt;/code&gt;.&lt;/p&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL--CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-cli-account-manager-interface-query-callback-for-find-accounts" role="function">
<title>mc_cli_account_manager_interface_query_callback_for_find_accounts ()</title>
<indexterm zone="mc-cli-account-manager-interface-query-callback-for-find-accounts"><primary sortas="mc_cli_account_manager_interface_query_callback_for_find_accounts">mc_cli_account_manager_interface_query_callback_for_find_accounts</primary></indexterm><programlisting><link linkend="void">void</link>                (*mc_cli_account_manager_interface_query_callback_for_find_accounts)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_accounts,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a FindAccounts method call
succeeds or fails.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_accounts</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <parameter>error</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           The array of account objects.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mc-cli-account-manager-interface-query-call-find-accounts" role="function">
<title>mc_cli_account_manager_interface_query_call_find_accounts ()</title>
<indexterm zone="mc-cli-account-manager-interface-query-call-find-accounts"><primary sortas="mc_cli_account_manager_interface_query_call_find_accounts">mc_cli_account_manager_interface_query_call_find_accounts</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * mc_cli_account_manager_interface_query_call_find_accounts
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="GHashTable">GHashTable</link> *in_params,
                                                         <link linkend="mc-cli-account-manager-interface-query-callback-for-find-accounts">mc_cli_account_manager_interface_query_callback_for_find_accounts</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a FindAccounts method call.
</para>
<para>
&lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;         &lt;p&gt;Find all accounts which match the search query.&lt;/p&gt;         &lt;p&gt;An empty parameter should return all accounts&lt;/p&gt;</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_params</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;The search query data. The keys can be any Connection Manager           parameter (in which case they must be prepended with the string           &amp;quot;param-&amp;quot;), any readable Account property (in the form           &lt;code&gt;Interface.PropertyName&lt;/code&gt;) or any of these special           keys:&lt;/p&gt;           &lt;ul&gt;             &lt;li&gt;s: Manager&lt;/li&gt;             &lt;li&gt;s: Protocol&lt;/li&gt;             &lt;li&gt;u: RequestedPresence&lt;/li&gt;             &lt;li&gt;s: RequestedStatus&lt;/li&gt;             &lt;li&gt;u: CurrentPresence&lt;/li&gt;             &lt;li&gt;s: CurrentStatus&lt;/li&gt;           &lt;/ul&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL--CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 id="libmcclient-mc-account-manager.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="McAccountManager-account-created" role="signal"><title>The <literal>&quot;account-created&quot;</literal> signal</title>
<indexterm zone="McAccountManager-account-created"><primary sortas="McAccountManager::account-created">McAccountManager::account-created</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="McAccountManager">McAccountManager</link> *account_manager,
                                                        <link linkend="gchar">gchar</link>            *object_path,
                                                        <link linkend="gboolean">gboolean</link>          valid,
                                                        <link linkend="gpointer">gpointer</link>          user_data)            : Run Last</programlisting>
<para>
Emitted when a new account is created.
</para>
<para>
This signal will be emitted only once
<link linkend="mc-account-manager-call-when-ready"><function>mc_account_manager_call_when_ready()</function></link> has been successfully invoked.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>account_manager</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="McAccountManager"><type>McAccountManager</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object_path</parameter>&#160;:</term>
<listitem><simpara> the path to the DBus Account object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>valid</parameter>&#160;:</term>
<listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if this is a valid account.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="McAccountManager-account-ready" role="signal"><title>The <literal>&quot;account-ready&quot;</literal> signal</title>
<indexterm zone="McAccountManager-account-ready"><primary sortas="McAccountManager::account-ready">McAccountManager::account-ready</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="McAccountManager">McAccountManager</link> *account_manager,
                                                        <link linkend="McAccount">McAccount</link>        *account,
                                                        <link linkend="gpointer">gpointer</link>          user_data)            : Run Last</programlisting>
<para>
Emitted when a new account has appeared on the D-Bus and all the
requested interfaces (see
<link linkend="mc-account-manager-call-when-ready-with-accounts"><function>mc_account_manager_call_when_ready_with_accounts()</function></link>) have become ready.
</para>
<para>
Clients should connect to this signal only after
<link linkend="mc-account-manager-call-when-ready-with-accounts"><function>mc_account_manager_call_when_ready_with_accounts()</function></link> has called the
callback function.
</para>
<para>
In the unlikely case that this signal is emitted several times for the
same account, clients should ignore all but the first emission.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>account_manager</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="McAccountManager"><type>McAccountManager</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>account</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="McAccount"><type>McAccount</type></link> that became ready.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
