<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="McdOperation">
<refmeta>
<refentrytitle role="top_of_page" id="McdOperation.top_of_page">McdOperation</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBMISSIONCONTROL-SERVER Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>McdOperation</refname>
<refpurpose>Container class for holding missions</refpurpose>
</refnamediv>
<refsect1 id="McdOperation.stability-level">
<title>Stability Level</title>
Unstable, unless otherwise indicated
</refsect1>

<refsynopsisdiv id="McdOperation.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;mcd-operation.h&gt;

                    <link linkend="McdOperation-struct">McdOperation</link>;
<link linkend="McdOperation">McdOperation</link> *      <link linkend="mcd-operation-new">mcd_operation_new</link>                   (void);
<link linkend="void">void</link>                <link linkend="mcd-operation-take-mission">mcd_operation_take_mission</link>          (<link linkend="McdOperation">McdOperation</link> *operation,
                                                         <link linkend="McdMission">McdMission</link> *mission);
<link linkend="void">void</link>                <link linkend="mcd-operation-remove-mission">mcd_operation_remove_mission</link>        (<link linkend="McdOperation">McdOperation</link> *operation,
                                                         <link linkend="McdMission">McdMission</link> *mission);
<link linkend="void">void</link>                <link linkend="mcd-operation-foreach">mcd_operation_foreach</link>               (<link linkend="McdOperation">McdOperation</link> *operation,
                                                         <link linkend="GFunc">GFunc</link> func,
                                                         <link linkend="gpointer">gpointer</link> user_data);
const <link linkend="GList">GList</link> *       <link linkend="mcd-operation-get-missions">mcd_operation_get_missions</link>          (<link linkend="McdOperation">McdOperation</link> *operation);
</synopsis>
</refsynopsisdiv>

<refsect1 id="McdOperation.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="McdMission">McdMission</link>
         +----McdOperation
               +----<link linkend="McdConnection">McdConnection</link>
               +----<link linkend="McdController">McdController</link>
               +----<link linkend="McdManager">McdManager</link>
               +----<link linkend="McdProxy">McdProxy</link>
</synopsis>
</refsect1>






<refsect1 id="McdOperation.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="McdOperation-mission-removed">mission-removed</link>&quot;                                : Run First
  &quot;<link linkend="McdOperation-mission-taken">mission-taken</link>&quot;                                  : Run First
</synopsis>
</refsect1>


<refsect1 id="McdOperation.description" role="desc">
<title role="desc.title">Description</title>
<para>
This is a simple container class that can hold a list of mission objects
as children. McdOperation makes sure that object states (see: McdMission)
of the container are all proxied to the children. Children life cycles
also managed by this class and parent-child relationship is correctly
established.</para>
<para>
</para>
</refsect1>

<refsect1 id="McdOperation.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="McdOperation-struct" role="struct">
<title>McdOperation</title>
<indexterm zone="McdOperation-struct"><primary sortas="McdOperation">McdOperation</primary></indexterm><programlisting>typedef struct _McdOperation McdOperation;</programlisting>
<para>
</para></refsect2>
<refsect2 id="mcd-operation-new" role="function">
<title>mcd_operation_new ()</title>
<indexterm zone="mcd-operation-new"><primary sortas="mcd_operation_new">mcd_operation_new</primary></indexterm><programlisting><link linkend="McdOperation">McdOperation</link> *      mcd_operation_new                   (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mcd-operation-take-mission" role="function">
<title>mcd_operation_take_mission ()</title>
<indexterm zone="mcd-operation-take-mission"><primary sortas="mcd_operation_take_mission">mcd_operation_take_mission</primary></indexterm><programlisting><link linkend="void">void</link>                mcd_operation_take_mission          (<link linkend="McdOperation">McdOperation</link> *operation,
                                                         <link linkend="McdMission">McdMission</link> *mission);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>operation</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mission</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mcd-operation-remove-mission" role="function">
<title>mcd_operation_remove_mission ()</title>
<indexterm zone="mcd-operation-remove-mission"><primary sortas="mcd_operation_remove_mission">mcd_operation_remove_mission</primary></indexterm><programlisting><link linkend="void">void</link>                mcd_operation_remove_mission        (<link linkend="McdOperation">McdOperation</link> *operation,
                                                         <link linkend="McdMission">McdMission</link> *mission);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>operation</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mission</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mcd-operation-foreach" role="function">
<title>mcd_operation_foreach ()</title>
<indexterm zone="mcd-operation-foreach"><primary sortas="mcd_operation_foreach">mcd_operation_foreach</primary></indexterm><programlisting><link linkend="void">void</link>                mcd_operation_foreach               (<link linkend="McdOperation">McdOperation</link> *operation,
                                                         <link linkend="GFunc">GFunc</link> func,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>operation</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="mcd-operation-get-missions" role="function">
<title>mcd_operation_get_missions ()</title>
<indexterm zone="mcd-operation-get-missions"><primary sortas="mcd_operation_get_missions">mcd_operation_get_missions</primary></indexterm><programlisting>const <link linkend="GList">GList</link> *       mcd_operation_get_missions          (<link linkend="McdOperation">McdOperation</link> *operation);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>operation</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 id="McdOperation.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="McdOperation-mission-removed" role="signal"><title>The <literal>&quot;mission-removed&quot;</literal> signal</title>
<indexterm zone="McdOperation-mission-removed"><primary sortas="McdOperation::mission-removed">McdOperation::mission-removed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="McdOperation">McdOperation</link> *mcdoperation,
                                                        <link linkend="GObject">GObject</link>      *arg1,
                                                        <link linkend="gpointer">gpointer</link>      user_data)         : Run First</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mcdoperation</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="McdOperation-mission-taken" role="signal"><title>The <literal>&quot;mission-taken&quot;</literal> signal</title>
<indexterm zone="McdOperation-mission-taken"><primary sortas="McdOperation::mission-taken">McdOperation::mission-taken</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="McdOperation">McdOperation</link> *mcdoperation,
                                                        <link linkend="GObject">GObject</link>      *arg1,
                                                        <link linkend="gpointer">gpointer</link>      user_data)         : Run First</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mcdoperation</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
